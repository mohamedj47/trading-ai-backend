import pandas as pd
import joblib
from datetime import datetime
import pytz

# Ø§Ù„Ø£Ø²ÙˆØ§Ø¬ Ø§Ù„Ù„ÙŠ Ù‡Ù†Ø´ØªØºÙ„ Ø¹Ù„ÙŠÙ‡Ø§
symbols = [
    "BTC/USDT", "ETH/USDT", "EUR/USD", "GBP/USD", "USD/JPY",
    "XAU/USD", "AUD/USD", "USD/CAD", "NZD/USD"
]

# ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ù†Ù…Ø§Ø°Ø¬ ÙˆØ§Ù„ØªÙ†Ø¨Ø¤
def load_and_predict():
    results = []
    for symbol in symbols:
        try:
            model = joblib.load(f"models/{symbol.replace('/', '_')}_model.pkl")
            latest_data = pd.read_csv(f"data/{symbol.replace('/', '_')}.csv").tail(1)
            X_latest = latest_data.drop(columns=["Date", "Close"])
            pred = model.predict(X_latest)[0]
            proba = model.predict_proba(X_latest)[0].max()

            direction = "ØµØ¹ÙˆØ¯" if pred == 1 else "Ù‡Ø¨ÙˆØ·"
            color = "ðŸŸ¢" if pred == 1 else "ðŸ”´"

            # Ø§Ù„ØªÙˆÙ‚ÙŠØª Ø¨ØªÙˆÙ‚ÙŠØª Ù…ØµØ±
            egypt_tz = pytz.timezone("Africa/Cairo")
            now_egypt = datetime.now(egypt_tz).strftime("%Y-%m-%d %H:%M:%S")

            results.append({
                "Ø²ÙˆØ¬": symbol,
                "Ø¥Ø´Ø§Ø±Ø©": direction,
                "Ø«Ù‚Ø©": f"{proba*100:.2f}%",
                "Ù„ÙˆÙ†": color,
                "ÙˆÙ‚Øª": now_egypt
            })
        except Exception as e:
            results.append({"Ø²ÙˆØ¬": symbol, "Ø®Ø·Ø£": str(e)})
    return results

if __name__ == "__main__":
    signals = load_and_predict()
    for sig in signals:
        print(sig)
